[{"C:\\Users\\GeraldMaboshe\\diary\\src\\App.js":"1","C:\\Users\\GeraldMaboshe\\diary\\src\\reportWebVitals.js":"2","C:\\Users\\GeraldMaboshe\\diary\\src\\index.js":"3","C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\Constants.js":"4","C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Date.js":"5","C:\\Users\\GeraldMaboshe\\diary\\src\\components\\extended_view\\Modal.js":"6","C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\index.js":"7","C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Calendar.js":"8","C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Month.js":"9","C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\payload.js":"10","C:\\Users\\GeraldMaboshe\\diary\\src\\components\\core\\Rating.js":"11","C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Day.js":"12","C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\Payload.js":"13"},{"size":1370,"mtime":1612340155180,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607710462681,"results":"16","hashOfConfig":"15"},{"size":478,"mtime":1612036144780,"results":"17","hashOfConfig":"15"},{"size":349,"mtime":1612172888290,"results":"18","hashOfConfig":"15"},{"size":3445,"mtime":1612365916251,"results":"19","hashOfConfig":"15"},{"size":8469,"mtime":1612366254488,"results":"20","hashOfConfig":"15"},{"size":1613,"mtime":1612311020917,"results":"21","hashOfConfig":"15"},{"size":1593,"mtime":1612360130182,"results":"22","hashOfConfig":"15"},{"size":925,"mtime":1612359845371,"results":"23","hashOfConfig":"15"},{"size":1242,"mtime":1612312006324,"results":"24","hashOfConfig":"15"},{"size":705,"mtime":1612310840384,"results":"25","hashOfConfig":"15"},{"size":194,"mtime":1612312877181,"results":"26","hashOfConfig":"15"},{"size":1241,"mtime":1612354799302,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"myy8xj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GeraldMaboshe\\diary\\src\\App.js",[],"C:\\Users\\GeraldMaboshe\\diary\\src\\reportWebVitals.js",[],["57","58"],"C:\\Users\\GeraldMaboshe\\diary\\src\\index.js",[],["59","60"],"C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\Constants.js",[],"C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Date.js",["61","62","63","64"],"C:\\Users\\GeraldMaboshe\\diary\\src\\components\\extended_view\\Modal.js",["65","66","67"],"import React, { useState, useEffect } from 'react';\r\nimport './modal.scss';\r\nimport { GoArrowSmallRight, GoArrowSmallLeft } from 'react-icons/go';\r\nimport moment from 'moment';\r\nimport StarRating from '../core/Rating';\r\n\r\nconst Modal = ({ handleClose, show, item, items, selectedIndex }) => {\r\n  const showHideClassName = show ? 'modal display-block' : 'modal display-none';\r\n  const [active, setActive] = useState(item);\r\n  const [newIndex, setNewIndex] = useState(selectedIndex);\r\n\r\n  useEffect(() => {\r\n    if (!show) {\r\n      setNewIndex(selectedIndex);\r\n      setActive(item);\r\n    }\r\n  });\r\n\r\n  const nextTile = () => {\r\n    if (items.responseobjects[0].posts[newIndex - 2] != undefined) {\r\n      setActive(items.responseobjects[0].posts[newIndex - 1]);\r\n      setNewIndex(newIndex - 1);\r\n    }\r\n    return;\r\n  };\r\n\r\n  const prevTile = () => {\r\n    if (items.responseobjects[0].posts[newIndex + 2] != undefined) {\r\n      setActive(items.responseobjects[0].posts[selectedIndex + 1]);\r\n      setNewIndex(newIndex + 1);\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        <div className=\"btn-wrapper\">\r\n          <button type=\"button\" onClick={handleClose} className=\"close-btn\">\r\n            X\r\n          </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"arrow-container\">\r\n            <button className=\"arrow-btn\" onClick={prevTile}>\r\n              <GoArrowSmallLeft size={30} color=\"#ffffff\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"side-tile\">\r\n            <div className=\"overlay\">\r\n              {items.responseobjects[0].posts[newIndex + 1] ? (\r\n                <>\r\n                  <img\r\n                    src={\r\n                      items.responseobjects[0].posts[newIndex + 1]?.media[0]\r\n                        .mediaurl\r\n                    }\r\n                    alt=\"previous tile\"\r\n                    className=\"side-tile-image\"\r\n                  />\r\n                  <div className=\"side-content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col1\">\r\n                        {items.responseobjects[0].posts[\r\n                          newIndex + 1\r\n                        ]?.typeofday.map(type => (\r\n                          <div className={type}>\r\n                            {type === 'protein treatment'\r\n                              ? 'Pr'\r\n                              : type === 'deep conditioning'\r\n                              ? 'DC'\r\n                              : type === 'hair color'\r\n                              ? 'HC'\r\n                              : type === 'clarifying'\r\n                              ? 'C'\r\n                              : type === 'hair cut'\r\n                              ? 'Cu'\r\n                              : null}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"col2\">\r\n                        <StarRating\r\n                          value={\r\n                            items.responseobjects[0].posts[newIndex + 1]?.rating\r\n                          }\r\n                          size={17}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"side-dateTime\">\r\n                        {moment(\r\n                          items.responseobjects[0].posts[newIndex + 1]\r\n                            ?.calendardatetime\r\n                        ).format('Do MMM YYYY')}\r\n                      </p>\r\n                      <p className=\"side-description\">\r\n                        {`${items.responseobjects[0].posts[\r\n                          newIndex + 1\r\n                        ]?.text?.slice(0, 101)}...`}\r\n                        <span className=\"more\">(more)</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <p>You have no previous posts</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"active-tile\">\r\n            <img\r\n              src={active.media[0].mediaurl}\r\n              alt=\"tile\"\r\n              className=\"active-tile-image\"\r\n            />\r\n            <div className=\"content\">\r\n              <div className=\"row\">\r\n                <div className=\"col1\">\r\n                  {active.typeofday.map(type => (\r\n                    <div className={type}>\r\n                      {type === 'clarifying'\r\n                        ? 'C'\r\n                        : type === 'protein treatment'\r\n                        ? 'Pr'\r\n                        : type === 'deep conditioning'\r\n                        ? 'DC'\r\n                        : type === 'hair color'\r\n                        ? 'HC'\r\n                        : type === 'hair cut'\r\n                        ? 'Cu'\r\n                        : null}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"col2\">\r\n                  <StarRating value={active.rating} size={20} />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <p className=\"dateTime\">\r\n                  {moment(active.calendardatetime).format('Do MMM YYYY')}\r\n                </p>\r\n                <p className=\"description\">\r\n                  {`${active.text.slice(0, 101)}...`}\r\n                  <span className=\"more\">(more)</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"side-tile\">\r\n            <div className=\"overlay\">\r\n              {items.responseobjects[0].posts[newIndex - 1] ? (\r\n                <>\r\n                  <img\r\n                    src={\r\n                      items.responseobjects[0].posts[newIndex - 1]?.media[0]\r\n                        .mediaurl\r\n                    }\r\n                    className=\"side-tile-image\"\r\n                    alt=\"next tile\"\r\n                  />\r\n                  <div className=\"side-content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col1\">\r\n                        {items.responseobjects[0].posts[\r\n                          newIndex - 1\r\n                        ]?.typeofday.map(type => (\r\n                          <div className={type}>\r\n                            {type === 'clarifying'\r\n                              ? 'C'\r\n                              : type === 'protein treatment'\r\n                              ? 'Pr'\r\n                              : type === 'deep conditioning'\r\n                              ? 'DC'\r\n                              : type === 'hair color'\r\n                              ? 'HC'\r\n                              : type === 'hair cut'\r\n                              ? 'Cu'\r\n                              : null}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"col2\">\r\n                        <StarRating\r\n                          value={\r\n                            items.responseobjects[0].posts[newIndex - 1]?.rating\r\n                          }\r\n                          size={17}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"side-dateTime\">\r\n                        {moment(\r\n                          items.responseobjects[0].posts[newIndex - 1]\r\n                            ?.calendardatetime\r\n                        ).format('Do MMM YYYY')}\r\n                      </p>\r\n                      <p className=\"side-description\">\r\n                        {`${items.responseobjects[0].posts[\r\n                          newIndex - 1\r\n                        ]?.text?.slice(0, 101)}...`}\r\n                        <span className=\"more\">(more)</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <p>You have no next posts</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"arrow-container\">\r\n            <button className=\"arrow-btn\" onClick={nextTile}>\r\n              <GoArrowSmallRight size={30} color=\"#ffffff\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\index.js",[],"C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Calendar.js",["68"],"C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Month.js",["69"],"C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\payload.js",[],"C:\\Users\\GeraldMaboshe\\diary\\src\\components\\core\\Rating.js",[],"C:\\Users\\GeraldMaboshe\\diary\\src\\components\\calendar_view\\Day.js",[],"C:\\Users\\GeraldMaboshe\\diary\\src\\utils\\Payload.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":38,"column":55,"nodeType":"78","messageId":"79","endLine":38,"endColumn":57},{"ruleId":"76","severity":1,"message":"80","line":39,"column":55,"nodeType":"78","messageId":"79","endLine":39,"endColumn":57},{"ruleId":"76","severity":1,"message":"77","line":63,"column":53,"nodeType":"78","messageId":"79","endLine":63,"endColumn":55},{"ruleId":"76","severity":1,"message":"80","line":64,"column":53,"nodeType":"78","messageId":"79","endLine":64,"endColumn":55},{"ruleId":"81","severity":1,"message":"82","line":12,"column":3,"nodeType":"83","endLine":12,"endColumn":12,"suggestions":"84"},{"ruleId":"76","severity":1,"message":"80","line":20,"column":54,"nodeType":"78","messageId":"79","endLine":20,"endColumn":56},{"ruleId":"76","severity":1,"message":"80","line":28,"column":54,"nodeType":"78","messageId":"79","endLine":28,"endColumn":56},{"ruleId":"85","severity":1,"message":"86","line":35,"column":23,"nodeType":"87","messageId":"88","endLine":35,"endColumn":25},{"ruleId":"81","severity":1,"message":"89","line":33,"column":6,"nodeType":"90","endLine":33,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setNewIndex'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [show, selectedIndex, item] as a second argument to the useEffect Hook.","Identifier",["94"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'props.mid'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Add dependencies array: [show, selectedIndex, item]",{"range":"100","text":"101"},"Update the dependencies array to be: [props.mid]",{"range":"102","text":"103"},[593,593],", [show, selectedIndex, item]",[767,769],"[props.mid]"]